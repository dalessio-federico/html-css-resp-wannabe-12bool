/* debug */
.debug .row [class*=col-] {
  border: 2px solid black;
  height: 25vh;
}
/* fine debug, da cancellare in seguito */
/* AI fini dell'esercizio terr√≤ attiva la parte Debug */

/* regole basic */
* {
  padding: 0;
  Margin: 0;
  box-sizing: border-box;
}
/* Con Row voglio indicare il "contenitore" dei contenuti, sia questo un intera riga all'interno del nostro progetto, sia una sottosezione della riga stessa*/
.row {
  max-width: 1170px;
  max-width: 100%;
  margin: 0 auto;
}
/* applico l'after al row in modo tele che ogni volta ci sia un elemento flottante nelle sezioni, questo abbia allegato il clearfix.*/
.row::after {
  content: "";
  display: table;
  clear: both;
}
/* fine regole basic */

/* Impostazioni colonne */
/* imposto le classi col-1,2,3 etc in modo tale che vado ad affincarsi e adattino la loro altezza in base al contenuto */
.row [class*=col-] {
  float: left;
}
/* Tramite questa sintassi andremmo a dire al browser di calcolare la larghezza delle nostre colonne prendendo il massimale, frazionandolo per 12 e moltiplicandolo per il numero di colonne che deve occupare. */
@media screen and (min-width:1200px) {
  .col-lg-1 {width: calc( (100% / 12) * 1) }
  .col-lg-2 {width: calc( (100% / 12) * 2) }
  .col-lg-3 {width: calc( (100% / 12) * 3) }
  .col-lg-4 {width: calc( (100% / 12) * 4) }
  .col-lg-5 {width: calc( (100% / 12) * 5) }
  .col-lg-6 {width: calc( (100% / 12) * 6) }
  .col-lg-7 {width: calc( (100% / 12) * 7) }
  .col-lg-8 {width: calc( (100% / 12) * 8) }
  .col-lg-9 {width: calc( (100% / 12) * 9) }
  .col-lg-10 {width: calc( (100% / 12) * 10) }
  .col-lg-11 {width: calc( (100% / 12) * 11) }
  .col-lg-12 {width: calc( (100% / 12) * 12) }
  /* offset lg */
  .offset-lg-1 {margin-left: calc( (100% / 12) * 1) }
  .offset-lg-2 {margin-left: calc( (100% / 12) * 2) }
  .offset-lg-3 {margin-left: calc( (100% / 12) * 3) }
  .offset-lg-4 {margin-left: calc( (100% / 12) * 4) }
  .offset-lg-5 {margin-left: calc( (100% / 12) * 5) }
  .offset-lg-6 {margin-left: calc( (100% / 12) * 6) }
  .offset-lg-7 {margin-left: calc( (100% / 12) * 7) }
  .offset-lg-8 {margin-left: calc( (100% / 12) * 8) }
  .offset-lg-9 {margin-left: calc( (100% / 12) * 9) }
  .offset-lg-10 {margin-left: calc( (100% / 12) * 10) }
  .offset-lg-11 {margin-left: calc( (100% / 12) * 11) }
  .offset-lg-12 {margin-left: calc( (100% / 12) * 12) }
}

@media screen and (min-width:772px) and (max-width:1200px){
  .col-md-1 {width: calc( (100% / 12) * 1) }
  .col-md-2 {width: calc( (100% / 12) * 2) }
  .col-md-3 {width: calc( (100% / 12) * 3) }
  .col-md-4 {width: calc( (100% / 12) * 4) }
  .col-md-5 {width: calc( (100% / 12) * 5) }
  .col-md-6 {width: calc( (100% / 12) * 6) }
  .col-md-7 {width: calc( (100% / 12) * 7) }
  .col-md-8 {width: calc( (100% / 12) * 8) }
  .col-md-9 {width: calc( (100% / 12) * 9) }
  .col-md-10 {width: calc( (100% / 12) * 10) }
  .col-md-11 {width: calc( (100% / 12) * 11) }
  .col-md-12 {width: calc( (100% / 12) * 12) }
  /* offset md */
  .offset-md-1 {margin-left: calc( (100% / 12) * 1) }
  .offset-md-2 {margin-left: calc( (100% / 12) * 2) }
  .offset-md-3 {margin-left: calc( (100% / 12) * 3) }
  .offset-md-4 {margin-left: calc( (100% / 12) * 4) }
  .offset-md-5 {margin-left: calc( (100% / 12) * 5) }
  .offset-md-6 {margin-left: calc( (100% / 12) * 6) }
  .offset-md-7 {margin-left: calc( (100% / 12) * 7) }
  .offset-md-8 {margin-left: calc( (100% / 12) * 8) }
  .offset-md-9 {margin-left: calc( (100% / 12) * 9) }
  .offset-md-10 {margin-left: calc( (100% / 12) * 10) }
  .offset-md-11 {margin-left: calc( (100% / 12) * 11) }
  .offset-md-12 {margin-left: calc( (100% / 12) * 12) }

}

@media screen and (max-width:772px) {
  .col-xs-1 {width: calc( (100% / 12) * 1) }
  .col-xs-2 {width: calc( (100% / 12) * 2) }
  .col-xs-3 {width: calc( (100% / 12) * 3) }
  .col-xs-4 {width: calc( (100% / 12) * 4) }
  .col-xs-5 {width: calc( (100% / 12) * 5) }
  .col-xs-6 {width: calc( (100% / 12) * 6) }
  .col-xs-7 {width: calc( (100% / 12) * 7) }
  .col-xs-8 {width: calc( (100% / 12) * 8) }
  .col-xs-9 {width: calc( (100% / 12) * 9) }
  .col-xs-10 {width: calc( (100% / 12) * 10) }
  .col-xs-11 {width: calc( (100% / 12) * 11) }
  .col-xs-12 {width: calc( (100% / 12) * 12) }
  /* offset xs */
  .offset-xs-1 {margin-left: calc( (100% / 12) * 1) }
  .offset-xs-2 {margin-left: calc( (100% / 12) * 2) }
  .offset-xs-3 {margin-left: calc( (100% / 12) * 3) }
  .offset-xs-4 {margin-left: calc( (100% / 12) * 4) }
  .offset-xs-5 {margin-left: calc( (100% / 12) * 5) }
  .offset-xs-6 {margin-left: calc( (100% / 12) * 6) }
  .offset-xs-7 {margin-left: calc( (100% / 12) * 7) }
  .offset-xs-8 {margin-left: calc( (100% / 12) * 8) }
  .offset-xs-9 {margin-left: calc( (100% / 12) * 9) }
  .offset-xs-10 {margin-left: calc( (100% / 12) * 10) }
  .offset-xs-11 {margin-left: calc( (100% / 12) * 11) }
  .offset-xs-12 {margin-left: calc( (100% / 12) * 12) }
}

/* applicando gli stessi calcoli ma ad un margin-left potremmo dire al browser di calcolare le colonne vuote che ci sono prima di quella che vogliamo abbia contenuto */
